// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package depend_inject

import (
	"github.com/google/wire"
)

// Injectors from injector.go:

// run command: `wire gen open_api/depend_inject`
// or run command `cd depend_inject && wire`
func InitializeService(isAnError bool) (*SimpleService, error) {
	simpleRepository := NewSimpleRepository(isAnError)
	simpleService, err := NewSimpleService(simpleRepository)
	if err != nil {
		return nil, err
	}
	return simpleService, nil
}

func InitializeDatabaseRepo() *DatabaseRepository {
	databasePostgreSQL := NewDatabasePostgreSQL()
	databaseMySQL := NewDatabaseMySQL()
	databaseMongoDB := NewDatabaseMongoDB()
	databaseRepository := NewDatabaseRepository(databasePostgreSQL, databaseMySQL, databaseMongoDB)
	return databaseRepository
}

func InitializeFooBarService() *FooBarService {
	fooRepository := NewFooRepo()
	fooService := NewFooService(fooRepository)
	barRepository := NewBarRepo()
	barService := NewBarService(barRepository)
	fooBarService := NewFooBarService(fooService, barService)
	return fooBarService
}

func InitializeHelloService() *HelloService {
	helloImpl := NewHelloImpl()
	helloService := NewHelloService(helloImpl)
	return helloService
}

func InitializeFooBar() *FooBar {
	foo := NewFoo()
	bar := NewBar()
	fooBar := &FooBar{
		Foo: foo,
		Bar: bar,
	}
	return fooBar
}

// injector.go:

var fooSet = wire.NewSet(NewFooRepo, NewFooService)

var barSet = wire.NewSet(NewBarRepo, NewBarService)

var helloSet = wire.NewSet(
	NewHelloImpl, wire.Bind(new(Hello), new(*HelloImpl)),
)

var fooBarSet = wire.NewSet(
	NewFoo,
	NewBar,
)
